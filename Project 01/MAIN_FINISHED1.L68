00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 08/03/2024 00:15:36

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :PAWN SHOP SIMULATOR
00000000                             3  * Written by :MATEUSZ ZIOBROWSKI
00000000                             4  * Date       :STARTED 26/02/2024 ENDED 08/03/2024
00000000                             5  * Description:SET UP SHOP IN LOCATION AND CUSTOMERS COME IN WITH ITEMS AND THE PLAYER GETS TO CHOOSE IF HE WANTS TO BUY IT OR NOT.
00000000                             6  * FROM A COUPLE OF PLAY TESTS NO BUGS HAVE BEEN DETECTED AND I REMOVED SOME OF THE USELESS CODE FOR EASE OF READING
00000000                             7  *-----------------------------------------------------------
00000000                             8  *-------------------------------------------------------
00000000                             9  * STARTING MEMORY ADDRESS FOR THE PROGRAMME $1000
00000000                            10  *-------------------------------------------------------
00000000                            11      
00001000                            12      ORG $1000
00001000                            13  
00001000                            14  *-------------------------------------------------------
00001000                            15  * CHOOSE TO BUILD A SHOP IN THE CITY OR A VILLAGE
00001000                            16  *-------------------------------------------------------
00001000                            17  
00001000                            18  *-------------------------------------------------------
00001000                            19  * VALIDATION VALUES TO BE USED, MODIFY AS NEEDED
00001000                            20  * ADD ADDITIONAL VALIDATION VALUES AS REQUIRED
00001000                            21  *-------------------------------------------------------
00001000  =00000000                 22  EXIT            EQU     0      ; USED TO EXIT ASSEMBLY PROGRAM
00001000  =000000C8                 23  TOTAL_GOLD_FUND EQU     200
00001000  =00000000                 24  MIN_GOLD        EQU     0           ; MIN NUMBER OF GOLD
00001000  =000000C8                 25  MAX_GOLD        EQU     200         ; MAX NUMBER OF GOLD
00001000  =00000032                 26  VILLAGE_COST    EQU     50          ; COST TO SET UP IN A VILLAGE
00001000  =00000064                 27  CITY_COST       EQU     100         ; COST TO SET UP IN A CITY
00001000  =00000064                 28  MINE_LOC        EQU     100         ; USED BELOW FOR SOME SIMPLE COLLISION DETECTION USING CMP
00001000  =00000064                 29  MINE_LOC        EQU     100         ; USED BELOW FOR SOME SIMPLE COLLISION DETECTION USING CMP
00001000                            30                                      ; EXAMPLE FOR A HIT
00001000                            31  
00001000                            32  
00001000                            33  *-------------------------------------------------------
00001000                            34  * START OF GAME
00001000                            35  *-------------------------------------------------------
00001000                            36  START:
00001000                            37      
00001000  2A3C 000000C8             38      MOVE.L  #200, D5
00001006                            39  
00001006                            40  
00001006  6100 2002                 41      BSR     WELCOME    ; BRANCH TO THE WELCOME SUBROUTINE
0000100A  6100 2026                 42      BSR     INPUT      ; BRANCH TO THE INPUT SUBROUTINE
0000100E  6100 20D8                 43      BSR     CUSTOMER_1
00001012  6100 2132                 44      BSR     CUSTOMER_2
00001016  6100 218C                 45      BSR     CUSTOMER_3
0000101A  6100 21E6                 46      BSR     CUSTOMER_4
0000101E  6100 1FE0                 47      BSR     GAME       ; BRANCH TO THE GAME SUBROUTINE
00001022  4E75                      48      RTS
00001024                            49  *-------------------------------------------------------
00001024                            50  * GAME LOOP
00001024                            51  *-------------------------------------------------------
00003000                            52      ORG     $3000      ; THE REST OF THE PROGRAM IS TO BE LOCATED FROM 3000 ONWARDS
00003000                            53  
00003000                            54  *-------------------------------------------------------
00003000                            55  *-------------------GAME SUBROUTINE---------------------
00003000                            56  *-------------------------------------------------------
00003000                            57  GAME:
00003000                            58  
00003000  6100 0084                 59      BSR     GAMELOOP   ; BRANCH TO GAMELOOP SUBROUTINE
00003004                            60  
00003004  4E75                      61      RTS                ; RETURN FROM GAME: SUBROUTINE
00003006                            62            
00003006                            63  END:
00003006  FFFF FFFF                 64      SIMHALT
0000300A                            65      
0000300A                            66  *-------------------------------------------------------
0000300A                            67  *-------------------WELCOME SUBROUTINE------------------
0000300A                            68  *-------------------------------------------------------
0000300A                            69  WELCOME:
0000300A                            70  
0000300A  43F9 000032DF             71      LEA     WELCOME_MSG,A1      ; Load address of welcome message
00003010  103C 000E                 72      MOVE.B  #14,D0              ; Function code to display string
00003014  4E4F                      73      TRAP    #15                 ; Call operating system to display message
00003016                            74  
00003016                            75      ; Display welcome choice message
00003016  43F9 000033F2             76      LEA     WELCOME_CHOICE,A1   ; Load address of welcome choice message
0000301C  103C 000E                 77      MOVE.B  #14,D0              ; Function code to display string
00003020  4E4F                      78      TRAP    #15                 ; Call operating system to display message
00003022                            79  
00003022  4E75                      80      RTS                         ; Return from subroutine
00003024                            81      
00003024                            82      
00003024                            83      ; Implementing the game logic
00003024  103C 0004                 84      MOVE.B  #4,D0               ; Display message for player to choose
00003028  4E4F                      85      TRAP    #15
0000302A  103C 0001                 86      MOVE.B  #1,D0               ; Wait for player input
0000302E  B23C 0001                 87      CMP.B   #1,D1               ; Check player input
00003032                            88  
00003032                            89  
00003032                            90  
00003032                            91  
00003032                            92  *-------------------------------------------------------
00003032                            93  *---------GAMEPLAY INPUT VALUES SUBROUTINE--------------
00003032                            94  *-------------------------------------------------------    
00003032                            95  INPUT:
00003032                            96   ; Get user input
00003032  103C 0004                 97      MOVE.B  #4,D0               ; Function code to display prompt
00003036  43F9 00003538             98      LEA     INPUT_PROMPT,A1     ; Load address of input prompt
0000303C  4E4F                      99      TRAP    #15                 ; Call operating system to display prompt
0000303E                           100      
0000303E  103C 0003                101      MOVE.B  #3,D0               ; Function code to read integer
00003042  4E4F                     102      TRAP    #15                 ; Call operating system to read integer
00003044                           103      
00003044  B23C 0001                104      CMP.B   #1,D1               ; Check user input
00003048  6700 0062                105      BEQ     VILLAGE             ; If user chose 1, go to village
0000304C  B23C 0002                106      CMP.B   #2,D1               ; Check user input
00003050  6700 006A                107      BEQ     CITY                ; If user chose 2, go to city
00003054  60DC                     108      BRA     INPUT               ; If invalid input, repeat input process
00003056                           109      
00003056                           110      
00003056                           111  ; Get user input
00003056  103C 0004                112      MOVE.B  #4,D0               ; Function code to display prompt
0000305A  43F9 00003538            113      LEA     INPUT_PROMPT,A1     ; Load address of input prompt
00003060  4E4F                     114      TRAP    #15                 ; Call operating system to display prompt
00003062                           115      
00003062  103C 0003                116      MOVE.B  #3,D0               ; Function code to read integer
00003066  4E4F                     117      TRAP    #15                 ; Call operating system to read integer
00003068                           118      
00003068  B23C 0001                119      CMP.B   #1,D1               ; Check user input
0000306C  6700 000C                120      BEQ     BUY_ITEM            ; If user chose 1, buy item
00003070  B23C 0002                121      CMP.B   #2,D1               ; Check user input
00003074  6700 000A                122      BEQ     NO_BUY              ; If user chose 2, don't buy item
00003078  60B8                     123      BRA     INPUT               ; If invalid input, repeat input process
0000307A                           124  
0000307A                           125  BUY_ITEM:
0000307A  123C 0001                126      MOVE.B  #1,D1               ; Set register D1 to 1 to indicate buying
0000307E  4E75                     127      RTS                         ; Return from subroutine
00003080                           128  
00003080                           129  NO_BUY:
00003080  123C 0002                130      MOVE.B  #2,D1               ; Set register D1 to 2 to indicate not buying
00003084  4E75                     131      RTS                         ; Return from subroutine
00003086                           132  
00003086                           133  
00003086                           134  *-------------------------------------------------------
00003086                           135  *----------------GAMELOOP (MAIN LOOP)-------------------
00003086                           136  *------------------------------------------------------- 
00003086                           137  GAMELOOP:
00003086                           138  
00003086  6100 0210                139      BSR     CLEAR_SCREEN    ; CLEARS THE SCREEN
0000308A  6100 0218                140      BSR     REPLAY          ; BRANCH TO REPLAY GAME SUBROUTINE
0000308E  6100 0208                141      BSR     CLEAR_SCREEN    ; CLEARS THE SCREEN
00003092  4E75                     142      RTS                     ; RETURN FROM GAMELOOP: SUBROUTINE
00003094                           143      
00003094                           144  
00003094                           145  *---------------------------------------------------------------
00003094                           146  *-------------------------Village or City-----------------------
00003094                           147  * Picking a village or a city to settle in
00003094                           148  *---------------------------------------------------------------   
00003094                           149  VILLAGEORCITY:
00003094  43F9 00003425            150      LEA     VILLAGEORCITY_MSG,A1    ; ASSIGN MESSAGE TO ADDRESS REGISTER A1
0000309A  B43C 0031                151      CMP.B   #49,D2                  ; CHECK IF PLAYER CHOSE '1'
0000309E  6700 000C                152      BEQ     VILLAGE                 ; IF YES, GO TO VILLAGE
000030A2  B43C 0032                153      CMP.B   #50,D2                  ; CHECK IF PLAYER CHOSE '2'
000030A6  6700 0014                154      BEQ     CITY                    ; IF YES, GO TO CITY
000030AA  60E8                     155      BRA     VILLAGEORCITY           ; OTHERWISE, REPEAT
000030AC                           156  
000030AC                           157  VILLAGE:
000030AC  6100 001E                158      BSR     DISPLAY_VILLAGE_MSG     ; Display village message
000030B0  0485 00000032            159      SUB.L   #50, D5
000030B6  6100 01B8                160      BSR     DISPLAY_GOLD_FUND
000030BA  4E75                     161      RTS
000030BC                           162  
000030BC                           163  CITY:
000030BC  6100 001C                164      BSR     DISPLAY_CITY_MSG        ; Display city message
000030C0  0485 00000064            165      SUB.L   #100, D5
000030C6  6100 01A8                166      BSR     DISPLAY_GOLD_FUND
000030CA  4E75                     167      RTS
000030CC                           168  
000030CC                           169  
000030CC                           170  DISPLAY_VILLAGE_MSG:
000030CC  43F9 0000346F            171      LEA     VILLAGE_LEFT_MSG,A1     ; Load address of village message into A1
000030D2  103C 000E                172      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
000030D6  4E4F                     173      TRAP    #15                     ; Trap to display the message
000030D8  4E75                     174      RTS                             ; Return from subroutine
000030DA                           175  
000030DA                           176  DISPLAY_CITY_MSG:
000030DA  43F9 000034B1            177      LEA     CITY_LEFT_MSG,A1        ; Load address of city message into A1
000030E0  103C 000E                178      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
000030E4  4E4F                     179      TRAP    #15                     ; Trap to display the message
000030E6  4E75                     180      RTS                             ; Return from subroutine
000030E8                           181      
000030E8                           182  
000030E8                           183  *-------------------------------------------------------------------------
000030E8                           184  *-------------------------ALL THE CUSTOMERS-------------------------------
000030E8                           185  * MAIN PART OF THE GAME WHERE IT ADDS DEDUCTS AND UPDATES THE GOLD COINS 
000030E8                           186  *-------------------------------------------------------------------------
000030E8                           187     
000030E8                           188  CUSTOMER_1:
000030E8                           189      ; Customer 1 approaches the player with an item for sale
000030E8  6100 01AE                190      BSR     CLEAR_SCREEN
000030EC  43F9 00003555            191      LEA     CUSTOMER_1_MSG,A1       ; Load address of customer message into A1
000030F2  103C 000E                192      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
000030F6  4E4F                     193      TRAP    #15                     ; Trap to display the message
000030F8                           194  
000030F8  103C 0004                195      MOVE.B  #4,D0                   ; Display message for player to choose
000030FC  43F9 0000372E            196      LEA     BUY_ITEM_PROMPT,A1      ; Load address of buy item prompt message
00003102  4E4F                     197      TRAP    #15                     ; Trap to display the message
00003104                           198  
00003104  103C 0003                199      MOVE.B  #3,D0                   ; Function code to read integer
00003108  4E4F                     200      TRAP    #15                     ; Call operating system to read integer
0000310A                           201  
0000310A  B23C 0001                202      CMP.B   #1,D1                   ; Check if player wants to buy
0000310E  6700 0006                203      BEQ     .purchase_item          ; If yes, proceed to purchase item
00003112  6000 0018                204      BRA     .tax_player             ; If no, proceed to tax the player
00003116                           205  
00003116                           206  .purchase_item:
00003116                           207                                      ; Adjust the total gold funding
00003116  0685 00000037            208      ADD.L   #55, D5                 ; Adjust the total gold funding
0000311C                           209                                      ; Display earned coins message
0000311C  43F9 0000374C            210      LEA     YES_COIN_AMOUNT,A1      ; Load address of remaining gold message into A1
00003122  103C 000E                211      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
00003126  4E4F                     212      TRAP    #15                     ; Trap to display the message
00003128  6000 0014                213      BRA     .end_customer           ; End the customer interaction
0000312C                           214  
0000312C                           215  
0000312C                           216  .tax_player:
0000312C                           217      ; Display tax paid message
0000312C                           218      ; Update total gold funding
0000312C  0485 00000019            219      SUB.L   #25, D5                 ; Adjust the total gold funding
00003132  43F9 00003768            220      LEA     TAX_MSG,A1              ; Load address of tax message into A1
00003138  103C 000E                221      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
0000313C  4E4F                     222      TRAP    #15                     ; Trap to display the message
0000313E                           223  
0000313E                           224  
0000313E                           225  .end_customer:
0000313E                           226      ; Display total gold funding
0000313E  2405                     227      MOVE.L  D5, D2                  ; Move total gold funding to display register
00003140  6100 012E                228      BSR     DISPLAY_GOLD_FUND
00003144  4E75                     229      RTS                             ; Return from subroutine
00003146                           230  
00003146                           231  CUSTOMER_2:
00003146                           232     ; Customer 1 approaches the player with an item for sale
00003146  6100 0150                233      BSR     CLEAR_SCREEN
0000314A  43F9 000035D0            234      LEA     CUSTOMER_2_MSG,A1       ; Load address of customer message into A1
00003150  103C 000E                235      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
00003154  4E4F                     236      TRAP    #15                     ; Trap to display the message
00003156                           237  
00003156  103C 0004                238      MOVE.B  #4,D0                   ; Display message for player to choose
0000315A  43F9 0000372E            239      LEA     BUY_ITEM_PROMPT,A1      ; Load address of buy item prompt message
00003160  4E4F                     240      TRAP    #15                     ; Trap to display the message
00003162                           241  
00003162  103C 0003                242      MOVE.B  #3,D0                   ; Function code to read integer
00003166  4E4F                     243      TRAP    #15                     ; Call operating system to read integer
00003168                           244  
00003168  B23C 0001                245      CMP.B   #1,D1                   ; Check if player wants to buy
0000316C  6700 0006                246      BEQ     .purchase_item          ; If yes, proceed to purchase item
00003170  6000 0018                247      BRA     .tax_player             ; If no, proceed to tax the player
00003174                           248  
00003174                           249  .purchase_item:
00003174                           250      ; Adjust the total gold funding
00003174  0685 0000003C            251      ADD.L   #60, D5  
0000317A                           252  
0000317A                           253      ; Display earned coins message
0000317A  43F9 0000377E            254      LEA     YES_COIN_AMOUNT2,A1     ; Load address of remaining gold message into A1
00003180  103C 000E                255      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
00003184  4E4F                     256      TRAP    #15                     ; Trap to display the message
00003186                           257  
00003186  6000 0014                258      BRA     .end_customer           ; End the customer interaction
0000318A                           259  
0000318A                           260  
0000318A                           261  .tax_player:
0000318A                           262      ; Display tax paid message
0000318A                           263      ; Update total gold funding
0000318A  0485 00000019            264      SUB.L   #25, D5                 ; Adjust the total gold funding
00003190  43F9 00003768            265      LEA     TAX_MSG,A1              ; Load address of tax message into A1
00003196  103C 000E                266      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
0000319A  4E4F                     267      TRAP    #15                     ; Trap to display the message
0000319C                           268  
0000319C                           269  
0000319C                           270  .end_customer:
0000319C                           271      ; Display total gold funding
0000319C  2405                     272      MOVE.L  D5, D2                  ; Move total gold funding to display register
0000319E  6100 00D0                273      BSR     DISPLAY_GOLD_FUND
000031A2  4E75                     274      RTS                             ; Return from subroutine
000031A4                           275  
000031A4                           276  CUSTOMER_3:
000031A4                           277  ; Customer 1 approaches the player with an item for sale
000031A4  6100 00F2                278      BSR     CLEAR_SCREEN
000031A8  43F9 00003646            279      LEA     CUSTOMER_3_MSG,A1       ; Load address of customer message into A1
000031AE  103C 000E                280      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
000031B2  4E4F                     281      TRAP    #15                     ; Trap to display the message
000031B4                           282  
000031B4  103C 0004                283      MOVE.B  #4,D0                   ; Display message for player to choose
000031B8  43F9 0000372E            284      LEA     BUY_ITEM_PROMPT,A1      ; Load address of buy item prompt message
000031BE  4E4F                     285      TRAP    #15                     ; Trap to display the message
000031C0                           286  
000031C0  103C 0003                287      MOVE.B  #3,D0                   ; Function code to read integer
000031C4  4E4F                     288      TRAP    #15                     ; Call operating system to read integer
000031C6                           289  
000031C6  B23C 0001                290      CMP.B   #1,D1                   ; Check if player wants to buy
000031CA  6700 0006                291      BEQ     .purchase_item          ; If yes, proceed to purchase item
000031CE  6000 0018                292      BRA     .tax_player             ; If no, proceed to tax the player
000031D2                           293  
000031D2                           294  .purchase_item:
000031D2                           295      ; Display earned coins message
000031D2  0485 00000064            296      SUB.L   #100, D5                ; Adjust the total gold funding
000031D8                           297      ; Display earned coins message
000031D8  43F9 0000379A            298      LEA     YES_COIN_AMOUNT3,A1     ; Load address of remaining gold message into A1
000031DE  103C 000E                299      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
000031E2  4E4F                     300      TRAP    #15                     ; Trap to display the message
000031E4                           301  
000031E4  6000 0014                302      BRA     .end_customer           ; End the customer interaction
000031E8                           303  
000031E8                           304  
000031E8                           305  .tax_player:
000031E8                           306      ; Display tax paid message
000031E8                           307      ; Update total gold funding
000031E8  0485 00000019            308      SUB.L   #25, D5                 ; Adjust the total gold funding
000031EE  43F9 00003768            309      LEA     TAX_MSG,A1              ; Load address of tax message into A1
000031F4  103C 000E                310      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
000031F8  4E4F                     311      TRAP    #15                     ; Trap to display the message
000031FA                           312  
000031FA                           313  
000031FA                           314  .end_customer:
000031FA                           315      ; Display total gold funding
000031FA  2405                     316      MOVE.L  D5, D2                  ; Move total gold funding to display register
000031FC  6100 0072                317      BSR     DISPLAY_GOLD_FUND
00003200  4E75                     318      RTS                             ; Return from subroutine
00003202                           319  
00003202                           320  CUSTOMER_4:
00003202                           321  ; Customer 1 approaches the player with an item for sale
00003202  6100 0094                322      BSR     CLEAR_SCREEN
00003206  43F9 000036BC            323      LEA     CUSTOMER_4_MSG,A1       ; Load address of customer message into A1
0000320C  103C 000E                324      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
00003210  4E4F                     325      TRAP    #15                     ; Trap to display the message
00003212                           326  
00003212  103C 0004                327      MOVE.B  #4,D0                   ; Display message for player to choose
00003216  43F9 0000372E            328      LEA     BUY_ITEM_PROMPT,A1      ; Load address of buy item prompt message
0000321C  4E4F                     329      TRAP    #15                     ; Trap to display the message
0000321E                           330  
0000321E  103C 0003                331      MOVE.B  #3,D0                   ; Function code to read integer
00003222  4E4F                     332      TRAP    #15                     ; Call operating system to read integer
00003224                           333  
00003224  B23C 0001                334      CMP.B   #1,D1                   ; Check if player wants to buy
00003228  6700 0006                335      BEQ     .purchase_item          ; If yes, proceed to purchase item
0000322C  6000 0018                336      BRA     .tax_player             ; If no, proceed to tax the player
00003230                           337  
00003230                           338  .purchase_item:
00003230                           339      ; Display earned coins message
00003230  0485 00000050            340      SUB.L   #80, D5                 ; Adjust the total gold funding
00003236                           341                                      ; Display earned coins message
00003236  43F9 000037B5            342      LEA     YES_COIN_AMOUNT4,A1     ; Load address of remaining gold message into A1
0000323C  103C 000E                343      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
00003240  4E4F                     344      TRAP    #15                     ; Trap to display the message
00003242                           345  
00003242  6000 0014                346      BRA     .end_customer           ; End the customer interaction
00003246                           347  
00003246                           348  
00003246                           349  .tax_player:
00003246                           350      ; Display tax paid message
00003246                           351      ; Update total gold funding
00003246  0485 00000019            352      SUB.L   #25, D5                 ; Adjust the total gold funding
0000324C  43F9 00003768            353      LEA     TAX_MSG,A1              ; Load address of tax message into A1
00003252  103C 000E                354      MOVE.B  #14,D0                  ; Move literal 14 to D0 (TRAP operation for displaying)
00003256  4E4F                     355      TRAP    #15                     ; Trap to display the message
00003258                           356  
00003258                           357  
00003258                           358  .end_customer:
00003258                           359      ; Display total gold funding
00003258  2405                     360      MOVE.L  D5, D2                  ; Move total gold funding to display register
0000325A  6100 0014                361      BSR     DISPLAY_GOLD_FUND
0000325E  4E75                     362      RTS                             ; Return from subroutine
00003260                           363  
00003260                           364  GAMEPLAY:
00003260  6100 FE86                365      BSR     CUSTOMER_1              ; Branch to customer 1 interaction subroutine
00003264  6100 FEE0                366      BSR     CUSTOMER_2              ; Branch to customer 2 interaction subroutine
00003268  6100 FF3A                367      BSR     CUSTOMER_3              ; Branch to customer 3 interaction subroutine
0000326C  6194                     368      BSR     CUSTOMER_4              ; Branch to customer 4 interaction subroutine
0000326E  4E75                     369      RTS
00003270                           370  
00003270                           371  DISPLAY_GOLD_FUND:
00003270                           372  
00003270                           373      ; Display total gold funding message
00003270  43F9 00003286            374      LEA     GOLD_FUND_MSG, A1       ; Load the address of the message
00003276  2F05                     375      MOVE.L  D5, -(A7)               ; Push the total gold fund value onto the stack
00003278  700E                     376      MOVE.L  #14, D0                 ; Function code to display a message
0000327A  4E4F                     377      TRAP    #15                     ; Call operating system to display the message
0000327C  2A1F                     378      MOVE.L  (A7)+, D5               ; Pop the total gold fund value from the stack
0000327E  2205                     379      MOVE.L  D5, D1                  ; Move the total gold fund value to D1 for display
00003280  7003                     380      MOVE.L  #3, D0                  ; Function code for displaying an integer
00003282  4E4F                     381      TRAP    #15                     ; Display the total gold fund value
00003284  4E75                     382      RTS                             ; Return from subroutine
00003286                           383  
00003286= 54 6F 74 61 6C 20 ...    384  GOLD_FUND_MSG: DC.B    'Total Gold Fund: ', 0
00003298                           385  
00003298                           386  CLEAR_SCREEN: 
00003298  103C 000B                387      MOVE.B  #11,D0      ; CLEAR SCREEN
0000329C  323C FF00                388      MOVE.W  #$FF00,D1
000032A0  4E4F                     389      TRAP    #15
000032A2  4E75                     390      RTS
000032A4                           391  
000032A4                           392  *-------------------------------------------------------
000032A4                           393  *------------------------REPLAY-------------------------
000032A4                           394  *-------------------------------------------------------
000032A4                           395  REPLAY:
000032A4  6100 0020                396      BSR     ENDL
000032A8  43F9 000034F0            397      LEA     REPLAY_MSG,A1
000032AE  103C 000E                398      MOVE.B  #14,D0
000032B2  4E4F                     399      TRAP    #15
000032B4                           400      
000032B4  103C 0004                401      MOVE.B  #4,D0
000032B8  4E4F                     402      TRAP    #15
000032BA                           403  
000032BA  B27C 0000                404      CMP     #EXIT,D1
000032BE  6700 FD46                405      BEQ     END         ; IF SR Z REGISTER CONTAINS 1 BEQ => BRANCH EQUALS
000032C2  6100 FDC2                406      BSR     GAMELOOP
000032C6                           407  
000032C6                           408  ENDL:
000032C6  48E7 8040                409      MOVEM.L D0/A1,-(A7)
000032CA  303C 000E                410      MOVE    #14,D0
000032CE  43F9 000032DC            411      LEA     CRLF,A1
000032D4  4E4F                     412      TRAP    #15
000032D6  4CDF 0201                413      MOVEM.L (A7)+,D0/A1
000032DA  4E75                     414      RTS
000032DC                           415  
000032DC                           416  
000032DC                           417  
000032DC                           418  
000032DC                           419  
000032DC                           420  *-------------------------------------------------------
000032DC                           421  *-------------------DATA DELARATIONS--------------------
000032DC                           422  *-------------------------------------------------------
000032DC                           423  
000032DC= 0D 0A 00                 424  CRLF:                   DC.B    $0D,$0A,0
000032DF= 2A 2A 2A 2A 2A 2A ...    425  WELCOME_MSG:            DC.B    '**********************************************************************'
00003325= 0D 0A                    426                          DC.B    $0D,$0A
00003327= 57 65 6C 63 6F 6D ...    427                          DC.B    'Welcome to the business game, You get to buy and sell items,'
00003363= 0D 0A                    428                          DC.B    $0D,$0A
00003365= 46 6F 72 20 65 69 ...    429                          DC.B    'For either a profit or loss,'
00003381= 0D 0A                    430                          DC.B    $0D,$0A   
00003383= 59 6F 75 20 73 74 ...    431                          DC.B    'You start with 200 gold coins or GC.'  
000033A7= 0D 0A                    432                          DC.B    $0D,$0A
000033A9= 2A 2A 2A 2A 2A 2A ...    433                          DC.B    '**********************************************************************'
000033EF= 0D 0A 00                 434                          DC.B    $0D,$0A,0
000033F2                           435  
000033F2                           436                          
000033F2= 50 6C 65 61 73 65 ...    437  WELCOME_CHOICE          DC.B    'Please choose (1) Village 50GC or (2) City 100GC: ',0
00003425                           438                         
00003425                           439  
00003425                           440       
00003425                           441  
00003425                           442  
00003425                           443  
00003425= 50 4C 45 41 53 45 ...    444  VILLAGEORCITY_MSG:      DC.B    'PLEASE CHOOSE WHERE YOU WANT TO SET UP.'
0000344C= 0D 0A                    445                          DC.B    $0D,$0A
0000344E= 49 4E 20 28 31 29 ...    446                          DC.B    'IN (1) VILLAGE OR IN (2) CITY : ',0
0000346F                           447  
0000346F                           448  
0000346F                           449  
0000346F                           450  
0000346F= 59 4F 55 20 48 41 ...    451  VILLAGE_LEFT_MSG:       DC.B    'YOU HAVE CHOSEN THE VILLAGE.'
0000348B= 0D 0A                    452                          DC.B    $0D,$0A
0000348D= 59 4F 55 20 4E 4F ...    453                          DC.B    'YOU NOW HAVE 150 GOLD COINS LEFT ! ',0
000034B1                           454  
000034B1                           455  
000034B1= 59 4F 55 20 48 41 ...    456  CITY_LEFT_MSG:          DC.B    'YOU HAVE CHOSEN THE CITY.'
000034CA= 0D 0A                    457                          DC.B    $0D,$0A
000034CC= 59 4F 55 20 4E 4F ...    458                          DC.B    'YOU NOW HAVE 100 GOLD COINS LEFT ! ',0
000034F0                           459  
000034F0= 59 4F 55 20 46 49 ...    460  REPLAY_MSG:             DC.B    'YOU FINISHED THE GAME GOOD JOB :).'
00003512= 0D 0A                    461                          DC.B    $0D,$0A
00003514= 50 4C 45 41 53 45 ...    462                          DC.B    'PLEASE CHOOSE 0 TO END THE GAME. ! ',0
00003538                           463  
00003538= 43 48 4F 4F 53 45 ...    464  INPUT_PROMPT            DC.B    'CHOOSE A 1 VILLAGE OR 2 CITY',0
00003555                           465  
00003555= 41 20 43 55 53 54 ...    466  CUSTOMER_1_MSG          DC.B    'A CUSTOMER CAME IN AND OFFERED THIS NOKIA CELLPHONE TO YOU.'
00003590= 0D 0A                    467                          DC.B    $0D,$0A
00003592= 44 4F 20 59 4F 55 ...    468                          DC.B    'DO YOU WANT TO BUY IT FOR 45 GOLDCOINS (1) YES OR (2) NO ? ! ',0
000035D0                           469                        
000035D0= 41 20 43 55 53 54 ...    470  CUSTOMER_2_MSG          DC.B    'A CUSTOMER CAME IN AND OFFERED THIS MP3 PLAYER TO YOU.'
00003606= 0D 0A                    471                          DC.B    $0D,$0A
00003608= 44 4F 20 59 4F 55 ...    472                          DC.B    'DO YOU WANT TO BUY IT FOR 50 GOLDCOINS (1) YES OR (2) NO ? ! ',0
00003646                           473                        
00003646= 41 20 43 55 53 54 ...    474  CUSTOMER_3_MSG          DC.B    'A CUSTOMER CAME IN AND OFFERED THIS DART-BOARD TO YOU.'
0000367C= 0D 0A                    475                          DC.B    $0D,$0A
0000367E= 44 4F 20 59 4F 55 ...    476                          DC.B    'DO YOU WANT TO BUY IT FOR 70 GOLDCOINS (1) YES OR (2) NO ? ! ',0
000036BC                           477                        
000036BC= 41 20 43 55 53 54 ...    478  CUSTOMER_4_MSG          DC.B    'A CUSTOMER CAME IN AND OFFERED THIS ENGINE TO YOU.'
000036EE= 0D 0A                    479                          DC.B    $0D,$0A
000036F0= 44 4F 20 59 4F 55 ...    480                          DC.B    'DO YOU WANT TO BUY IT FOR 80 GOLDCOINS (1) YES OR (2) NO ? ! ',0
0000372E                           481  
0000372E= 44 4F 20 59 4F 55 ...    482  BUY_ITEM_PROMPT         DC.B    'DO YOU WANT TO BUY THIS ITEM?',0
0000374C= 20 59 4F 55 20 47 ...    483  YES_COIN_AMOUNT         DC.B    ' YOU GAINED 55 GOLD COINS. ',0
00003768                           484  
00003768= 20 59 4F 55 20 50 ...    485  TAX_MSG                 DC.B    ' YOU PAID 25 IN TAX !',0
0000377E                           486  
0000377E= 20 59 4F 55 20 47 ...    487  YES_COIN_AMOUNT2        DC.B    ' YOU GAINED 60 GOLD COINS. ',0
0000379A                           488  
0000379A= 20 59 4F 55 20 4C ...    489  YES_COIN_AMOUNT3        DC.B    ' YOU LOST 100 GOLD COINS. ',0
000037B5                           490  
000037B5= 20 59 4F 55 20 4C ...    491  YES_COIN_AMOUNT4        DC.B    ' YOU LOST 80 GOLD COINS. ',0
000037CF                           492  
000037CF= 59 4F 55 20 48 41 ...    493  PLAYER_WON_MSG          DC.B    'YOU HAVE AND YOUR SHOP WILL PROSPER',0
000037F3= 59 4F 55 20 48 41 ...    494  PLAYER_LOST_MSG         DC.B    'YOU HAVE BANKRUPTED UNLUCKY',0
0000380F                           495  
0000380F                           496  
0000380F                           497  
0000380F                           498  
0000380F                           499  
0000380F                           500  
0000380F                           501  
0000380F                           502      END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BUY_ITEM            307A
BUY_ITEM_PROMPT     372E
CITY                30BC
CITY_COST           64
CITY_LEFT_MSG       34B1
CLEAR_SCREEN        3298
CRLF                32DC
CUSTOMER_1          30E8
CUSTOMER_1:END_CUSTOMER  313E
CUSTOMER_1:PURCHASE_ITEM  3116
CUSTOMER_1:TAX_PLAYER  312C
CUSTOMER_1_MSG      3555
CUSTOMER_2          3146
CUSTOMER_2:END_CUSTOMER  319C
CUSTOMER_2:PURCHASE_ITEM  3174
CUSTOMER_2:TAX_PLAYER  318A
CUSTOMER_2_MSG      35D0
CUSTOMER_3          31A4
CUSTOMER_3:END_CUSTOMER  31FA
CUSTOMER_3:PURCHASE_ITEM  31D2
CUSTOMER_3:TAX_PLAYER  31E8
CUSTOMER_3_MSG      3646
CUSTOMER_4          3202
CUSTOMER_4:END_CUSTOMER  3258
CUSTOMER_4:PURCHASE_ITEM  3230
CUSTOMER_4:TAX_PLAYER  3246
CUSTOMER_4_MSG      36BC
DISPLAY_CITY_MSG    30DA
DISPLAY_GOLD_FUND   3270
DISPLAY_VILLAGE_MSG  30CC
END                 3006
ENDL                32C6
EXIT                0
GAME                3000
GAMELOOP            3086
GAMEPLAY            3260
GOLD_FUND_MSG       3286
INPUT               3032
INPUT_PROMPT        3538
MAX_GOLD            C8
MINE_LOC            64
MIN_GOLD            0
NO_BUY              3080
PLAYER_LOST_MSG     37F3
PLAYER_WON_MSG      37CF
REPLAY              32A4
REPLAY_MSG          34F0
START               1000
TAX_MSG             3768
TOTAL_GOLD_FUND     C8
VILLAGE             30AC
VILLAGEORCITY       3094
VILLAGEORCITY_MSG   3425
VILLAGE_COST        32
VILLAGE_LEFT_MSG    346F
WELCOME             300A
WELCOME_CHOICE      33F2
WELCOME_MSG         32DF
YES_COIN_AMOUNT     374C
YES_COIN_AMOUNT2    377E
YES_COIN_AMOUNT3    379A
YES_COIN_AMOUNT4    37B5
